



/**
 * jQuery resize event
 * @see          http://benalman.com/projects/jquery-resize-plugin/
 * @license      MIT license
 */
(function ($, h, c) {
	var a = $([]), e = $.resize = $.extend($.resize, {}), i, k = "setTimeout", j = "resize", d = j + "-special-event", b = "delay", f = "throttleWindow";
	e[b] = 250;
	e[f] = true;
	$.event.special[j] = {
		setup: function () {
			if (!e[f] && this[k]) {
				return false
			}
			var l = $(this);
			a = a.add(l);
			$.data(this, d, {w: l.width(), h: l.height()});
			if (a.length === 1) {
				g()
			}
		}, teardown: function () {
			if (!e[f] && this[k]) {
				return false
			}
			var l = $(this);
			a = a.not(l);
			l.removeData(d);
			if (!a.length) {
				clearTimeout(i)
			}
		}, add: function (l) {
			if (!e[f] && this[k]) {
				return false
			}
			var n;

			function m(s, o, p) {
				var q = $(this), r = $.data(this, d);
				r.w = o !== c ? o : q.width();
				r.h = p !== c ? p : q.height();
				n.apply(this, arguments)
			}

			if ($.isFunction(l)) {
				n = l;
				return m
			} else {
				n = l.handler;
				l.handler = m
			}
		}
	};
	function g() {
		i = h[k](function () {
			a.each(function () {
				var n = $(this), m = n.width(), l = n.height(), o = $.data(this, d);
				if (m !== o.w || l !== o.h) {
					n.trigger(j, [o.w = m, o.h = l])
				}
			});
			g()
		}, e[b])
	}
})(jQuery, this);






























/**
 * @module       Prevent click events after a touchend.
 * @author       Anders Johnson
 * @license      MIT
 * @version      0.0.0
 * @see          https://github.com/adjohnson916/prevent-ghost-click.js
 */
!function (t, n, e) {
	function i(t) {
		for (var n = 0; n < u.length; n++) {
			var e = u[n][0], i = u[n][1];
			if (Math.abs(t.clientX - e) < r && Math.abs(t.clientY - i) < r) {
				t.stopPropagation(), t.preventDefault();
				break
			}
		}
	}

	function c() {
		u = []
	}

	function o() {
		u.splice(0, 1)
	}

	function a(t) {
		if (t.touches.length - t.changedTouches.length <= 0) {
			var n = t.changedTouches[0];
			u.push([n.clientX, n.clientY]), setTimeout(o, h)
		}
	}

	var u = [], r = 25, h = 2500;
	return "ontouchstart" in t ? (t[e] = function (t) {
		t.addEventListener("touchstart", c, !0), t.addEventListener("touchend", a, !0)
	}, void n.addEventListener("click", i, !0)) : void(t[e] = function () {
	})
}(window, document, "PreventGhostClick");



